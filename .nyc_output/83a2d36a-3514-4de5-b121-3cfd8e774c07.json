{"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0101209500/src/noteClass.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0101209500/src/noteClass.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":29}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":30}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":25}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":100}},"6":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"7":{"start":{"line":15,"column":12},"end":{"line":15,"column":54}},"8":{"start":{"line":17,"column":8},"end":{"line":23,"column":9}},"9":{"start":{"line":18,"column":12},"end":{"line":18,"column":63}},"10":{"start":{"line":21,"column":12},"end":{"line":21,"column":106}},"11":{"start":{"line":22,"column":12},"end":{"line":22,"column":61}},"12":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"13":{"start":{"line":27,"column":12},"end":{"line":27,"column":65}},"14":{"start":{"line":30,"column":12},"end":{"line":30,"column":64}},"15":{"start":{"line":34,"column":8},"end":{"line":64,"column":9}},"16":{"start":{"line":35,"column":12},"end":{"line":35,"column":69}},"17":{"start":{"line":38,"column":12},"end":{"line":63,"column":13}},"18":{"start":{"line":39,"column":16},"end":{"line":39,"column":73}},"19":{"start":{"line":42,"column":16},"end":{"line":42,"column":70}},"20":{"start":{"line":43,"column":16},"end":{"line":62,"column":19}},"21":{"start":{"line":44,"column":34},"end":{"line":44,"column":106}},"22":{"start":{"line":45,"column":20},"end":{"line":61,"column":21}},"23":{"start":{"line":47,"column":28},"end":{"line":47,"column":66}},"24":{"start":{"line":48,"column":28},"end":{"line":48,"column":34}},"25":{"start":{"line":50,"column":28},"end":{"line":50,"column":67}},"26":{"start":{"line":51,"column":28},"end":{"line":51,"column":34}},"27":{"start":{"line":53,"column":28},"end":{"line":53,"column":68}},"28":{"start":{"line":54,"column":28},"end":{"line":54,"column":34}},"29":{"start":{"line":56,"column":28},"end":{"line":56,"column":69}},"30":{"start":{"line":57,"column":28},"end":{"line":57,"column":34}},"31":{"start":{"line":59,"column":28},"end":{"line":59,"column":90}},"32":{"start":{"line":60,"column":28},"end":{"line":60,"column":34}},"33":{"start":{"line":67,"column":8},"end":{"line":89,"column":9}},"34":{"start":{"line":68,"column":26},"end":{"line":68,"column":104}},"35":{"start":{"line":69,"column":12},"end":{"line":85,"column":13}},"36":{"start":{"line":71,"column":20},"end":{"line":71,"column":80}},"37":{"start":{"line":72,"column":20},"end":{"line":72,"column":26}},"38":{"start":{"line":74,"column":20},"end":{"line":74,"column":81}},"39":{"start":{"line":75,"column":20},"end":{"line":75,"column":26}},"40":{"start":{"line":77,"column":20},"end":{"line":77,"column":82}},"41":{"start":{"line":78,"column":20},"end":{"line":78,"column":26}},"42":{"start":{"line":80,"column":20},"end":{"line":80,"column":83}},"43":{"start":{"line":81,"column":20},"end":{"line":81,"column":26}},"44":{"start":{"line":83,"column":20},"end":{"line":83,"column":82}},"45":{"start":{"line":84,"column":20},"end":{"line":84,"column":26}},"46":{"start":{"line":88,"column":12},"end":{"line":88,"column":64}},"47":{"start":{"line":92,"column":8},"end":{"line":109,"column":9}},"48":{"start":{"line":93,"column":26},"end":{"line":93,"column":104}},"49":{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},"50":{"start":{"line":95,"column":16},"end":{"line":95,"column":47}},"51":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"52":{"start":{"line":98,"column":16},"end":{"line":98,"column":44}},"53":{"start":{"line":100,"column":12},"end":{"line":102,"column":13}},"54":{"start":{"line":101,"column":16},"end":{"line":101,"column":46}},"55":{"start":{"line":103,"column":12},"end":{"line":103,"column":65}},"56":{"start":{"line":104,"column":12},"end":{"line":104,"column":138}},"57":{"start":{"line":105,"column":12},"end":{"line":105,"column":62}},"58":{"start":{"line":108,"column":12},"end":{"line":108,"column":64}},"59":{"start":{"line":112,"column":0},"end":{"line":112,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":22},"end":{"line":9,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":32},"end":{"line":12,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":32},"end":{"line":24,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":18},"end":{"line":32,"column":5}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":13},"end":{"line":65,"column":5}},"line":33},"5":{"name":"(anonymous_5)","decl":{"start":{"line":43,"column":68},"end":{"line":43,"column":69}},"loc":{"start":{"line":43,"column":78},"end":{"line":62,"column":17}},"line":43},"6":{"name":"(anonymous_6)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":20},"end":{"line":90,"column":5}},"line":66},"7":{"name":"(anonymous_7)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":43},"end":{"line":110,"column":5}},"line":91}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14},"1":{"loc":{"start":{"line":17,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":23,"column":9}},{"start":{"line":17,"column":8},"end":{"line":23,"column":9}}],"line":17},"2":{"loc":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},{"start":{"line":26,"column":8},"end":{"line":31,"column":9}}],"line":26},"3":{"loc":{"start":{"line":34,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":64,"column":9}},{"start":{"line":34,"column":8},"end":{"line":64,"column":9}}],"line":34},"4":{"loc":{"start":{"line":38,"column":12},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":38,"column":12},"end":{"line":63,"column":13}},{"start":{"line":38,"column":12},"end":{"line":63,"column":13}}],"line":38},"5":{"loc":{"start":{"line":45,"column":20},"end":{"line":61,"column":21}},"type":"switch","locations":[{"start":{"line":46,"column":24},"end":{"line":48,"column":34}},{"start":{"line":49,"column":24},"end":{"line":51,"column":34}},{"start":{"line":52,"column":24},"end":{"line":54,"column":34}},{"start":{"line":55,"column":24},"end":{"line":57,"column":34}},{"start":{"line":58,"column":24},"end":{"line":60,"column":34}}],"line":45},"6":{"loc":{"start":{"line":67,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":89,"column":9}},{"start":{"line":67,"column":8},"end":{"line":89,"column":9}}],"line":67},"7":{"loc":{"start":{"line":69,"column":12},"end":{"line":85,"column":13}},"type":"switch","locations":[{"start":{"line":70,"column":16},"end":{"line":72,"column":26}},{"start":{"line":73,"column":16},"end":{"line":75,"column":26}},{"start":{"line":76,"column":16},"end":{"line":78,"column":26}},{"start":{"line":79,"column":16},"end":{"line":81,"column":26}},{"start":{"line":82,"column":16},"end":{"line":84,"column":26}}],"line":69},"8":{"loc":{"start":{"line":92,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":109,"column":9}},{"start":{"line":92,"column":8},"end":{"line":109,"column":9}}],"line":92},"9":{"loc":{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},{"start":{"line":94,"column":12},"end":{"line":96,"column":13}}],"line":94},"10":{"loc":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"type":"if","locations":[{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},{"start":{"line":97,"column":12},"end":{"line":99,"column":13}}],"line":97},"11":{"loc":{"start":{"line":100,"column":12},"end":{"line":102,"column":13}},"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":102,"column":13}},{"start":{"line":100,"column":12},"end":{"line":102,"column":13}}],"line":100}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":10,"6":8,"7":0,"8":8,"9":1,"10":7,"11":7,"12":2,"13":1,"14":1,"15":3,"16":0,"17":3,"18":1,"19":2,"20":2,"21":6,"22":6,"23":1,"24":1,"25":1,"26":1,"27":2,"28":2,"29":1,"30":1,"31":1,"32":1,"33":6,"34":5,"35":5,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":3,"48":2,"49":2,"50":1,"51":2,"52":1,"53":2,"54":2,"55":2,"56":2,"57":2,"58":1,"59":1},"f":{"0":1,"1":10,"2":8,"3":2,"4":3,"5":6,"6":6,"7":3},"b":{"0":[0,8],"1":[1,7],"2":[1,1],"3":[0,3],"4":[1,2],"5":[1,1,2,1,1],"6":[5,1],"7":[1,1,1,1,1],"8":[2,1],"9":[1,1],"10":[1,1],"11":[2,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0101209500/src/noteClass.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0101209500/src/noteClass.ts"],"names":[],"mappings":";;;AAAA,8BAA8B;AAC9B,+BAA+B;AAE/B,MAAa,SAAS;IAClB,YAAoB,IAAW;QAAX,SAAI,GAAJ,IAAI,CAAO;IAAE,CAAC;IAElC,OAAO,CAAC,KAAY,EAAE,IAAW,EAAE,KAAY;QAC3C,OAAO,oBAAoB,KAAK,qBAAqB,IAAI,sBAAsB,KAAK,OAAO,CAAC;IAChG,CAAC;IACD,OAAO,CAAC,KAAY,EAAE,IAAW,EAAE,KAAY;QAC3C,IAAG,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,IAAI,CAAC,IAAI,EAAE,CAAC,EAAC;YAC3C,OAAO,CAAC,SAAS,CAAC,WAAW,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;SAC7C;QACD,IAAI,OAAO,CAAC,UAAU,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,KAAK,OAAO,CAAC,EAAC;YACzD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,CAAC;SACtD;aAAM;YACH,OAAO,CAAC,aAAa,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,KAAK,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;YAC9F,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC;SACpD;IACL,CAAC;IACD,MAAM,CAAC,KAAY;QACf,IAAI,OAAO,CAAC,UAAU,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,KAAK,OAAO,CAAC,EAAC;YACzD,OAAO,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,KAAK,OAAO,CAAC,CAAC;SACxD;aAAM;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,CAAC;SACvD;IACL,CAAC;IACD,MAAM;QACF,IAAG,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,IAAI,CAAC,IAAI,EAAE,CAAC,EAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC;SAC5D;aAAM;YACH,IAAG,OAAO,CAAC,WAAW,CAAC,WAAW,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,EAAC;gBACvD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC;aAC5D;iBAAM;gBACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;gBACtD,OAAO,CAAC,WAAW,CAAC,WAAW,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;oBACzD,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;oBACvF,QAAQ,OAAO,CAAC,KAAK,EAAE;wBACnB,KAAK,KAAK;4BACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;4BACtC,MAAM;wBACV,KAAK,MAAM;4BACP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;4BACvC,MAAM;wBACV,KAAK,OAAO;4BACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;4BACxC,MAAM;wBACV,KAAK,QAAQ;4BACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;4BACzC,MAAM;wBACV;4BACI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC,CAAC;4BAC9D,MAAM;qBACb;gBACL,CAAC,CAAC,CAAC;aACN;SACJ;IACL,CAAC;IACD,QAAQ,CAAC,KAAY;QACjB,IAAI,OAAO,CAAC,UAAU,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,KAAK,OAAO,CAAC,EAAC;YACzD,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC;YAC7F,QAAQ,OAAO,CAAC,KAAK,EAAE;gBACnB,KAAK,KAAK;oBACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC5D,MAAM;gBACV,KAAK,MAAM;oBACP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC7D,MAAM;gBACV,KAAK,OAAO;oBACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC9D,MAAM;gBACV,KAAK,QAAQ;oBACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC/D,MAAM;gBACV;oBACI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC,CAAC;oBAC9D,MAAM;aACb;SACJ;aAAM;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,CAAC;SACvD;IACL,CAAC;IACD,UAAU,CAAC,KAAY,EAAE,MAAqB,EAAE,IAAmB,EAAE,KAAoB;QACrF,IAAI,OAAO,CAAC,UAAU,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,KAAK,OAAO,CAAC,EAAC;YACzD,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC;YAC7F,IAAI,MAAM,IAAI,SAAS,EAAC;gBACpB,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;aAClC;YACD,IAAI,IAAI,IAAI,SAAS,EAAC;gBAClB,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;aAC/B;YACD,IAAI,KAAK,IAAI,SAAS,EAAC;gBACnB,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;aACjC;YACD,OAAO,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,KAAK,OAAO,CAAC,CAAC;YACrD,OAAO,CAAC,aAAa,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,KAAK,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9H,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC;SACrD;aAAM;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,CAAC;SACvD;IACL,CAAC;CACJ;AAlGD,8BAkGC","sourcesContent":["import * as filesys from \"fs\";\nimport * as chalk from \"chalk\";\n\nexport class NoteClass {\n    constructor(private user:string){}\n\n    getJSON(title:string, body:string, color:string){\n        return `{\\n\\t\\\"title\\\":\\\"${title}\\\",\\n\\t\\\"body\\\":\\\"${body}\\\",\\n\\t\\\"color\\\":\\\"${color}\\\"\\n}`;\n    }\n    addNote(title:string, body:string, color:string){\n        if(!filesys.existsSync(`./files/${this.user}`)){\n            filesys.mkdirSync(`./files/${this.user}`);\n        }\n        if (filesys.existsSync(`./files/${this.user}/${title}.json`)){\n            console.log(chalk.red(\"The note already exists!\"));\n        } else {\n            filesys.writeFileSync(`./files/${this.user}/${title}.json`, this.getJSON(title, body, color));\n            console.log(chalk.green(\"Succesfully created!\"));\n        }\n    }\n    rmNote(title:string){\n        if (filesys.existsSync(`./files/${this.user}/${title}.json`)){\n            filesys.rmSync(`./files/${this.user}/${title}.json`);\n        } else {\n            console.log(chalk.red(\"That note does not exist.\"));\n        }\n    }\n    lsNote(){\n        if(!filesys.existsSync(`./files/${this.user}`)){\n            console.log(chalk.red(`User ${this.user} has no notes`));\n        } else {\n            if(filesys.readdirSync(`./files/${this.user}`).length == 0){\n                console.log(chalk.red(`User ${this.user} has no notes`));\n            } else {\n                console.log(chalk.green(`Notes of ${this.user}: \\n`));\n                filesys.readdirSync(`./files/${this.user}`).forEach((elem) => {\n                    let jsonobj = JSON.parse(String(filesys.readFileSync(`./files/${this.user}/${elem}`)));\n                    switch (jsonobj.color) {\n                        case \"red\":\n                            console.log(chalk.red(jsonobj.title));\n                            break;\n                        case \"blue\":\n                            console.log(chalk.blue(jsonobj.title));\n                            break;\n                        case \"green\":\n                            console.log(chalk.green(jsonobj.title));\n                            break;\n                        case \"yellow\":\n                            console.log(chalk.yellow(jsonobj.title));\n                            break;\n                        default:\n                            console.log(chalk.red(\"The color of this note is not valid\"));\n                            break;\n                    }\n                });\n            }\n        }\n    }\n    readNote(title:string){\n        if (filesys.existsSync(`./files/${this.user}/${title}.json`)){\n            let jsonobj = JSON.parse(String(filesys.readFileSync(`./files/${this.user}/${title}.json`)));\n            switch (jsonobj.color) {\n                case \"red\":\n                    console.log(chalk.red(jsonobj.title + \"\\n\" + jsonobj.body));\n                    break;\n                case \"blue\":\n                    console.log(chalk.blue(jsonobj.title + \"\\n\" + jsonobj.body));\n                    break;\n                case \"green\":\n                    console.log(chalk.green(jsonobj.title + \"\\n\" + jsonobj.body));\n                    break;\n                case \"yellow\":\n                    console.log(chalk.yellow(jsonobj.title + \"\\n\" + jsonobj.body));\n                    break;\n                default:\n                    console.log(chalk.red(\"The color of this note is not valid\"));\n                    break;\n            }\n        } else {\n            console.log(chalk.red(\"That note does not exist.\"));\n        }\n    }\n    modifyNote(title:string, ntitle:string|unknown, body:string|unknown, color:string|unknown){\n        if (filesys.existsSync(`./files/${this.user}/${title}.json`)){\n            let jsonobj = JSON.parse(String(filesys.readFileSync(`./files/${this.user}/${title}.json`)));\n            if (ntitle != undefined){\n                jsonobj.title = String(ntitle);\n            }\n            if (body != undefined){\n                jsonobj.body = String(body);\n            }\n            if (color != undefined){\n                jsonobj.color = String(color);\n            }\n            filesys.rmSync(`./files/${this.user}/${title}.json`);\n            filesys.writeFileSync(`./files/${this.user}/${jsonobj.title}.json`, this.getJSON(jsonobj.title, jsonobj.body, jsonobj.color));\n            console.log(chalk.green(\"Succesfully modified!\"));\n        } else {\n            console.log(chalk.red(\"That note does not exist.\"));\n        }\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2d0ab79a8b61c5e9366a4780d935992dc556eedc","contentHash":"3f52c8671c0549a44a3997a18cec071feef3f22168794bcf00d22431ccabaa6c"}}